SELECT  u.id_usu,u.Correo,u.Clave,u.privilegio,u.tipo,u.estado,p.Nom_per,p.Ape_per,p.Dni_per,p.brevete,p.Direccion_per,p.Region_per,p.Ciudad_per,p.Distrito_per,p.Telefono_per,cp.cargo
FROM usuario u
INNER JOIN personal p ON u.fk_idper = p.id_per
INNER JOIN cargopersonal cp ON p.id_cargo = cp.id_cargo
 WHERE u.id_usu = 2;


//CONSULTA PERSONAL Y PROVEEDOR Y PROV_PERS
 select p.id_per,p.Nom_per,p.Ape_per,p.Dni_per,p.idunidad,pr.nombre
from prov_empl pe
INNER JOIN personal p
ON p.id_per = pe.fk_idper
INNER JOIN proveedor pr 
ON pr.id_prove = pe.fk_id_prove 
WHERE pr.id_prove = 195 and p.Estado_per = 1;


******************************************************
//////////// TABLE componente ///////////////

create table componentes(
id_comp int primary key auto_increment,
codigo varchar(20),
descripcion varchar(20),
nparte1 varchar(15),
nparte2 varchar(15),
nparte3 varchar(15),
medida varchar(15),
marca varchar(20),
unidad_med varchar(10),
est tinyint
)

se agregro est tinyint default 1;

******************************************************
//////////// TABLE  almacen_componente ///////////////

create table almacen_componente (
id int primary key auto_increment,
fk_idalm int,
fk_idcomp int,
stock double(5,2),
stock_min double(5,2),
stock_max double(5,2),
Referencia varchar(50),
modelo_equipo varchar(50),
fk_idsist int,
fk_idequipo int
)

se agregro est tinyint default 1;

///////////////////////////////


///////// TABLE PERSONAL ////////////

se agregro est tinyint default 1


///*** AGREGO TABLA medida_neumaticos ////

create table medida_neumaticos
(
id_medidaneumatico int primary key auto_increment,
descripcion varchar(20)
)


/******* query *****************/

-- CAMBIAR REFERENCIAS
SELECT * FROM almacen_componente ac where ac.Referencia like '%#Overhaul%'; 
update almacen_componente ac SET 
ac.Referencia = '#Sin especificar'
where ac.Referencia like '%#Overhaul%';

-- UNIR PRODUCTOS

SELECT ac.fk_idcomp
FROM almacen_componente ac WHERE ac.fk_idalm=7 and ac.fk_idcomp  
IN 
(
SELECT ac1.fk_idcomp FROM almacen_componente ac1
GROUP BY ac1.fk_idcomp HAVING count(ac1.fk_idcomp)>3
)
ORDER BY ac.fk_idcomp



SELECT ac1.fk_idcomp FROM almacen_componente ac1
GROUP BY ac1.fk_idcomp HAVING count(ac1.fk_idcomp)>3;

SELECT * FROM almacen_componente ac 
GROUP BY ac.fk_idcomp
HAVING count(ac.fk_idcomp)>3;
